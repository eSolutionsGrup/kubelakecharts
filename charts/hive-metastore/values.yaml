# Default values for spark-history-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Desired number of HMS pods to run.
replicaCount: 1

# Configuration for the Docker image to use.
image:
  # -- Docker image registry.
  repository: apache/hive
  # -- Image pull policy.
  pullPolicy: IfNotPresent
  # -- Image tag. Overrides the image tag whose default is the chart appVersion.
  tag: "3.1.3"

# -- Secrets to be used for pulling images from private Docker registries.
imagePullSecrets: []
# -- Override for the `hive-metastore.fullname` template, maintains the release name.
nameOverride: ""
# -- Overrides the release name.
fullnameOverride: ""

# Configuration from PostgreSQL databases
postgres:
  enabled: true
  host: "postgresql"
  port: 5432
  db: metastore
  username: admin
  password: pass

initContainers: []

# Service account configuration.
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Command and arguments override for a container
command: []

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Extra environment variables to pass to the container.
extraEnvs: []
# - name: FOO
#   value: "foo_value"

# -- Environment variables from ConfigMap or Secret.
envFrom: []

# change to NodePort to allow access outside of k8s
service:
  type: ClusterIP
  port: 9083

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  tcpSocket:
    port: 9083
readinessProbe:
  tcpSocket:
    port: 9083

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Node selector for pod scheduling.
nodeSelector: {}

# Tolerations for pod scheduling.
tolerations: []

# Affinity for pod scheduling.
affinity: {}
